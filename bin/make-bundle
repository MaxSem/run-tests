#!/bin/env php
<?php

$gitRevision = trim(`git rev-parse HEAD`);

$content = <<<PHP
#!/usr/bin/env php
<?php
/*
            THIS FILE IS AUTOMATICALLY GENERATED, DON'T EDIT IT

   +----------------------------------------------------------------------+
   | Copyright (c) The PHP Group                                          |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | https://php.net/license/3_01.txt                                     |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
   | Authors: Ilia Alshanetsky <iliaa@php.net>                            |
   |          Preston L. Bannister <pbannister@php.net>                   |
   |          Marcus Boerger <helly@php.net>                              |
   |          Derick Rethans <derick@php.net>                             |
   |          Sander Roobol <sander@php.net>                              |
   |          Andrea Faulds <ajf@ajf.me>                                  |
   |          Max Semenik <maxsem.wiki@gmail.com>                         |
   | (based on version by: Stig Bakken <ssb@php.net>)                     |
   | (based on the PHP 3 test framework by Rasmus Lerdorf)                |
   +----------------------------------------------------------------------+
 */

const GIT_REVISION = '$gitRevision';

PHP;

$dir = dirname(__DIR__);

function extractCode(string $filename): string
{
    global $dir;

    $code = file_get_contents($filename);

    $filenameShort = str_replace("$dir/", '', $filename);
    $prefix = "\n/** $filenameShort */";

    if (($index = strpos($code, '%START%')) !== false) {
        $code = substr($code, $index);
        $code = preg_replace('/^.*?\r?\n/', '', $code);

        return "$prefix\n$code\n";
    }

    if (preg_match('/\n.*?(?:class|interface|trait).*$/s', $code, $matches)) {
        return "$prefix\n{$matches[0]}\n";
    }

    throw new Exception("$filename: can't find where to start extracting from");
}

$iterator = new RecursiveDirectoryIterator("$dir/src", FilesystemIterator::CURRENT_AS_PATHNAME);

$files = [];
foreach ($iterator as $file) {
    if (is_file($file) && str_ends_with($file, '.php')) {
        $files[] = $file;
    }
}
sort($files);

foreach ($files as $file) {
    $content .= extractCode($file);
}

$content .= extractCode("$dir/run-tests.php");

echo $content;
